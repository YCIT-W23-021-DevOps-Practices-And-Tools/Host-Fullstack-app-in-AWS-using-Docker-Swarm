version: '3.2'

networks:
    ycit021-network:
        external: true

services:

    ycit_db:
        container_name: ycit_db
        networks:
            - ycit021-network
        image: mysql:8.0.29
        platform: linux/amd64
        volumes:
            - ./mysql/~~data:/var/lib/mysql
            - ./mysql/dev-init.sql:/docker-entrypoint-initdb.d/init.sql
        environment:
            - MYSQL_ROOT_PASSWORD=mysql-root-password
            - PORT=3306
        ports:
            - '3306:3306'
    ycit021_front-end:
        container_name: ycit021_front-end
        networks:
            - ycit021-network
        build:
            context: ./front-end
            dockerfile: ./Dockerfile
        restart: unless-stopped
        # platform: linux/amd64
        ports:
            - '3001:3000'
        environment:
            - TEST_VAR=test
        volumes:
          - ./front-end:/app
        command:
            - /bin/bash
            - -c
            - |
               npm i && npm run start

    ycit021_api:
        container_name: ycit021_api
        networks:
            - ycit021-network
        build:
            context: ./api
            dockerfile: ./Dockerfile
        restart: unless-stopped
        # platform: linux/amd64
        ports:
            - '8001:3000'
        environment:
            - TEST_VAR=test
        volumes:
          - ./api:/app
        command:
            - /bin/bash
            - -c
            - |
               npm i && npm run start:debug
    ycit021_mic1_express_create_an_update:
        container_name: ycit021_mic1_express_create_an_update
        networks:
            - ycit021-network
        build:
            context: ./mic1_express_create_an_update
            dockerfile: ./Dockerfile
        restart: unless-stopped
        # platform: linux/amd64
        ports:
            - '7001:3000'
        environment:
            - TEST_VAR=test
        volumes:
          - ./mic1_express_create_an_update:/app
        command:
            - /bin/bash
            - -c
            - |
               npm i && npm run start:dev

    ycit021_mic2_fastapi_read_delete:
        container_name: ycit021_mic2_fastapi_read_delete
        networks:
            - ycit021-network
        build:
            context: ./mic2_fastapi_read_delete
            dockerfile: ./Dockerfile
        restart: unless-stopped
        # platform: linux/amd64
        ports:
            - '7002:8080'
        environment:
            - TEST_VAR=test
        volumes:
          - ./mic2_fastapi_read_delete:/code
        command:
            - /bin/bash
            - -c
            - |
               uvicorn main:app --host 0.0.0.0 --port 8080



